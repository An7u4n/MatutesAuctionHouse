{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOption = {\n  header: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ApiAuthService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = 'https://localhost:7268/api/Users/login';\n  }\n  login(email, password) {\n    return this._http.post(this.url, {\n      email,\n      password\n    }, httpOption);\n  }\n}\nApiAuthService.ɵfac = function ApiAuthService_Factory(t) {\n  return new (t || ApiAuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiAuthService,\n  factory: ApiAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,UAAU,GAAG;EACjBC,MAAM,EAAE,IAAIF,WAAW,CAAC;IACtB,cAAc,EAAE;GACjB;CACF;AAGD,OAAM,MAAOG,cAAc;EAEzBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADzB,QAAG,GAAW,wCAAwC;EAGtD;EAEAC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAW,IAAI,CAACC,GAAG,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAE,EAAEP,UAAU,CAAC;EAC7E;;AARWE,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAQ,SAAdR,cAAc;EAAAS,YADD;AAAM","names":["HttpHeaders","httpOption","header","ApiAuthService","constructor","_http","login","email","password","post","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\migue\\Documents\\Projects\\MatutesAuctionHouse\\ClientApp\\src\\app\\services\\apiauth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Response } from '../models/models';\r\n\r\nconst httpOption = {\r\n  header: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiAuthService {\r\n  url: string = 'https://localhost:7268/api/Users/login';\r\n  constructor(private _http: HttpClient) {\r\n    \r\n  }\r\n\r\n  login(email: string, password: string): Observable<Response> {\r\n    return this._http.post<Response>(this.url, { email, password }, httpOption);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}