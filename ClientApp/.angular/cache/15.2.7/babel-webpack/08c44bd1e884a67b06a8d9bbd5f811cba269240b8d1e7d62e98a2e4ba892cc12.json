{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = 'https://localhost:7268/api/';\n  }\n  // User Methods\n  getUsers() {\n    return this._http.get(this.url + 'Users');\n  }\n  postUser(user_name, email, password) {\n    return this._http.post(this.url + 'Users', {\n      user_name: user_name,\n      email: email,\n      password: password\n    });\n  }\n  deleteUser(user_id) {\n    return this._http.delete(this.url + 'Users/' + user_id);\n  }\n  // Items Methods\n  getItems() {\n    return this._http.get(this.url + 'Items');\n  }\n  postItems(item_name, item_description, user_id) {\n    return this._http.post(this.url + 'Items', {\n      item_name: item_name,\n      item_description: item_description,\n      user_id: user_id\n    });\n  }\n  deleteItem(item_id) {\n    return this._http.delete(this.url + 'Items/' + item_id);\n  }\n  // Auction Methods\n  getAuctions() {\n    return this._http.get(this.url + 'Auctions');\n  }\n  postAuction(item_id, auction_start_date) {\n    return this._http.post(this.url + 'Auctions', {\n      item_id: item_id,\n      auction_start_date: auction_start_date\n    });\n  }\n  deleteAuction(auction_id) {\n    return this._http.delete(this.url + 'Auctions/' + auction_id);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFzB,QAAG,GAAW,6BAA6B;EAEF;EAEzC;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAU,IAAI,CAACC,GAAG,GAAG,OAAO,CAAC;EACpD;EAEAC,QAAQ,CAACC,SAAiB,EAAEC,KAAa,EAAEC,QAAgB;IACzD,OAAO,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAM,IAAI,CAACL,GAAG,GAAG,OAAO,EAAE;MAC9CE,SAAS,EAAEA,SAAS;MACpBC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;KACX,CAAC;EACJ;EAEAE,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACV,KAAK,CAACW,MAAM,CAAM,IAAI,CAACR,GAAG,GAAG,QAAQ,GAAGO,OAAO,CAAC;EAC9D;EAEA;EACAE,QAAQ;IACN,OAAO,IAAI,CAACZ,KAAK,CAACE,GAAG,CAAU,IAAI,CAACC,GAAG,GAAG,OAAO,CAAC;EACpD;EAEAU,SAAS,CAACC,SAAiB,EAAEC,gBAAwB,EAAEL,OAAe;IACpE,OAAO,IAAI,CAACV,KAAK,CAACQ,IAAI,CAAM,IAAI,CAACL,GAAG,GAAG,OAAO,EAAE;MAC9CW,SAAS,EAAEA,SAAS;MACpBC,gBAAgB,EAAEA,gBAAgB;MAClCL,OAAO,EAAEA;KACV,CAAC;EACJ;EAEAM,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACjB,KAAK,CAACW,MAAM,CAAM,IAAI,CAACR,GAAG,GAAG,QAAQ,GAAGc,OAAO,CAAC;EAC9D;EAGA;EACAC,WAAW;IACT,OAAO,IAAI,CAAClB,KAAK,CAACE,GAAG,CAAa,IAAI,CAACC,GAAG,GAAG,UAAU,CAAC;EAC1D;EAEAgB,WAAW,CAACF,OAAe,EAAEG,kBAA0B;IACrD,OAAO,IAAI,CAACpB,KAAK,CAACQ,IAAI,CAAM,IAAI,CAACL,GAAG,GAAG,UAAU,EAAE;MACjDc,OAAO,EAAEA,OAAO;MAChBG,kBAAkB,EAAEA;KACrB,CAAC;EACJ;EAEAC,aAAa,CAACC,UAAkB;IAC9B,OAAO,IAAI,CAACtB,KAAK,CAACW,MAAM,CAAM,IAAI,CAACR,GAAG,GAAG,WAAW,GAAGmB,UAAU,CAAC;EACpE;;AAtDWxB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAyB,SAAVzB,UAAU;EAAA0B,YAFT;AAAM","names":["ApiService","constructor","_http","getUsers","get","url","postUser","user_name","email","password","post","deleteUser","user_id","delete","getItems","postItems","item_name","item_description","deleteItem","item_id","getAuctions","postAuction","auction_start_date","deleteAuction","auction_id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\migue\\Documents\\Projects\\MatutesAuctionHouse\\ClientApp\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\nimport { Users, Items, Auctions } from '../models/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  url: string = 'https://localhost:7268/api/'\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  // User Methods\r\n  getUsers(): Observable<Users[]> {\r\n    return this._http.get<Users[]>(this.url + 'Users');\r\n  }\r\n\r\n  postUser(user_name: string, email: string, password: string): Observable<any> {\r\n    return this._http.post<any>(this.url + 'Users', {\r\n      user_name: user_name,\r\n      email: email,\r\n      password: password,\r\n    });\r\n  }\r\n\r\n  deleteUser(user_id: number): Observable<any> {\r\n    return this._http.delete<any>(this.url + 'Users/' + user_id);\r\n  }\r\n\r\n  // Items Methods\r\n  getItems(): Observable<Items[]> {\r\n    return this._http.get<Items[]>(this.url + 'Items');\r\n  }\r\n\r\n  postItems(item_name: string, item_description: string, user_id: number): Observable<any> {\r\n    return this._http.post<any>(this.url + 'Items', {\r\n      item_name: item_name,\r\n      item_description: item_description,\r\n      user_id: user_id,\r\n    })\r\n  }\r\n\r\n  deleteItem(item_id: number) {\r\n    return this._http.delete<any>(this.url + 'Items/' + item_id);\r\n  }\r\n\r\n\r\n  // Auction Methods\r\n  getAuctions(): Observable<Auctions[]> {\r\n    return this._http.get<Auctions[]>(this.url + 'Auctions');\r\n  }\r\n\r\n  postAuction(item_id: number, auction_start_date: string): Observable<any> {\r\n    return this._http.post<any>(this.url + 'Auctions', {\r\n      item_id: item_id,\r\n      auction_start_date: auction_start_date,\r\n    })\r\n  }\r\n\r\n  deleteAuction(auction_id: number) {\r\n    return this._http.delete<any>(this.url + 'Auctions/' + auction_id);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}